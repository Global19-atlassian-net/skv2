// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/skv2/api/multicluster/discovery/v1alpha1/aws_discovery_directive.proto

package v1alpha1

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//Discovery configuration for AWS resources.
type AwsDiscoveryDirectiveSpec struct {
	// If unspecified, discovery will be disabled.
	EksSelectors         []*AwsDiscoveryDirectiveSpec_ResourceSelector `protobuf:"bytes,2,rep,name=eks_selectors,json=eksSelectors,proto3" json:"eks_selectors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *AwsDiscoveryDirectiveSpec) Reset()         { *m = AwsDiscoveryDirectiveSpec{} }
func (m *AwsDiscoveryDirectiveSpec) String() string { return proto.CompactTextString(m) }
func (*AwsDiscoveryDirectiveSpec) ProtoMessage()    {}
func (*AwsDiscoveryDirectiveSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cf19e765c7d4f65, []int{0}
}
func (m *AwsDiscoveryDirectiveSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AwsDiscoveryDirectiveSpec.Unmarshal(m, b)
}
func (m *AwsDiscoveryDirectiveSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AwsDiscoveryDirectiveSpec.Marshal(b, m, deterministic)
}
func (m *AwsDiscoveryDirectiveSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AwsDiscoveryDirectiveSpec.Merge(m, src)
}
func (m *AwsDiscoveryDirectiveSpec) XXX_Size() int {
	return xxx_messageInfo_AwsDiscoveryDirectiveSpec.Size(m)
}
func (m *AwsDiscoveryDirectiveSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_AwsDiscoveryDirectiveSpec.DiscardUnknown(m)
}

var xxx_messageInfo_AwsDiscoveryDirectiveSpec proto.InternalMessageInfo

func (m *AwsDiscoveryDirectiveSpec) GetEksSelectors() []*AwsDiscoveryDirectiveSpec_ResourceSelector {
	if m != nil {
		return m.EksSelectors
	}
	return nil
}

// For a given resource_selector to apply to a resource, the resource must match all of the resource_selector's match criteria.
type AwsDiscoveryDirectiveSpec_ResourceSelector struct {
	// Types that are valid to be assigned to SelectorType:
	//	*AwsDiscoveryDirectiveSpec_ResourceSelector_Arn
	//	*AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher_
	SelectorType         isAwsDiscoveryDirectiveSpec_ResourceSelector_SelectorType `protobuf_oneof:"selector_type"`
	XXX_NoUnkeyedLiteral struct{}                                                  `json:"-"`
	XXX_unrecognized     []byte                                                    `json:"-"`
	XXX_sizecache        int32                                                     `json:"-"`
}

func (m *AwsDiscoveryDirectiveSpec_ResourceSelector) Reset() {
	*m = AwsDiscoveryDirectiveSpec_ResourceSelector{}
}
func (m *AwsDiscoveryDirectiveSpec_ResourceSelector) String() string {
	return proto.CompactTextString(m)
}
func (*AwsDiscoveryDirectiveSpec_ResourceSelector) ProtoMessage() {}
func (*AwsDiscoveryDirectiveSpec_ResourceSelector) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cf19e765c7d4f65, []int{0, 0}
}
func (m *AwsDiscoveryDirectiveSpec_ResourceSelector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AwsDiscoveryDirectiveSpec_ResourceSelector.Unmarshal(m, b)
}
func (m *AwsDiscoveryDirectiveSpec_ResourceSelector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AwsDiscoveryDirectiveSpec_ResourceSelector.Marshal(b, m, deterministic)
}
func (m *AwsDiscoveryDirectiveSpec_ResourceSelector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AwsDiscoveryDirectiveSpec_ResourceSelector.Merge(m, src)
}
func (m *AwsDiscoveryDirectiveSpec_ResourceSelector) XXX_Size() int {
	return xxx_messageInfo_AwsDiscoveryDirectiveSpec_ResourceSelector.Size(m)
}
func (m *AwsDiscoveryDirectiveSpec_ResourceSelector) XXX_DiscardUnknown() {
	xxx_messageInfo_AwsDiscoveryDirectiveSpec_ResourceSelector.DiscardUnknown(m)
}

var xxx_messageInfo_AwsDiscoveryDirectiveSpec_ResourceSelector proto.InternalMessageInfo

type isAwsDiscoveryDirectiveSpec_ResourceSelector_SelectorType interface {
	isAwsDiscoveryDirectiveSpec_ResourceSelector_SelectorType()
	Equal(interface{}) bool
}

type AwsDiscoveryDirectiveSpec_ResourceSelector_Arn struct {
	Arn string `protobuf:"bytes,1,opt,name=arn,proto3,oneof" json:"arn,omitempty"`
}
type AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher_ struct {
	Matcher *AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher `protobuf:"bytes,2,opt,name=matcher,proto3,oneof" json:"matcher,omitempty"`
}

func (*AwsDiscoveryDirectiveSpec_ResourceSelector_Arn) isAwsDiscoveryDirectiveSpec_ResourceSelector_SelectorType() {
}
func (*AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher_) isAwsDiscoveryDirectiveSpec_ResourceSelector_SelectorType() {
}

func (m *AwsDiscoveryDirectiveSpec_ResourceSelector) GetSelectorType() isAwsDiscoveryDirectiveSpec_ResourceSelector_SelectorType {
	if m != nil {
		return m.SelectorType
	}
	return nil
}

func (m *AwsDiscoveryDirectiveSpec_ResourceSelector) GetArn() string {
	if x, ok := m.GetSelectorType().(*AwsDiscoveryDirectiveSpec_ResourceSelector_Arn); ok {
		return x.Arn
	}
	return ""
}

func (m *AwsDiscoveryDirectiveSpec_ResourceSelector) GetMatcher() *AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher {
	if x, ok := m.GetSelectorType().(*AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher_); ok {
		return x.Matcher
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AwsDiscoveryDirectiveSpec_ResourceSelector) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AwsDiscoveryDirectiveSpec_ResourceSelector_Arn)(nil),
		(*AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher_)(nil),
	}
}

// Selects all resources that exist in the specified AWS region and possess the specified tags.
type AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher struct {
	// AWS account IDs. If unspecified, select across any accessible AWS account.
	AccountIds []string `protobuf:"bytes,1,rep,name=account_ids,json=accountIds,proto3" json:"account_ids,omitempty"`
	// AWS regions, e.g. us-east-2. If unspecified, select across all regions.
	Regions []string `protobuf:"bytes,2,rep,name=regions,proto3" json:"regions,omitempty"`
	// AWS resource tags. If unspecified, match any tags.
	Tags                 map[string]string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher) Reset() {
	*m = AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher{}
}
func (m *AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher) String() string {
	return proto.CompactTextString(m)
}
func (*AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher) ProtoMessage() {}
func (*AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cf19e765c7d4f65, []int{0, 0, 0}
}
func (m *AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher.Unmarshal(m, b)
}
func (m *AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher.Marshal(b, m, deterministic)
}
func (m *AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher.Merge(m, src)
}
func (m *AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher) XXX_Size() int {
	return xxx_messageInfo_AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher.Size(m)
}
func (m *AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher) XXX_DiscardUnknown() {
	xxx_messageInfo_AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher.DiscardUnknown(m)
}

var xxx_messageInfo_AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher proto.InternalMessageInfo

func (m *AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher) GetAccountIds() []string {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

func (m *AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher) GetRegions() []string {
	if m != nil {
		return m.Regions
	}
	return nil
}

func (m *AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type AwsDiscoveryDirectiveStatus struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AwsDiscoveryDirectiveStatus) Reset()         { *m = AwsDiscoveryDirectiveStatus{} }
func (m *AwsDiscoveryDirectiveStatus) String() string { return proto.CompactTextString(m) }
func (*AwsDiscoveryDirectiveStatus) ProtoMessage()    {}
func (*AwsDiscoveryDirectiveStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cf19e765c7d4f65, []int{1}
}
func (m *AwsDiscoveryDirectiveStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AwsDiscoveryDirectiveStatus.Unmarshal(m, b)
}
func (m *AwsDiscoveryDirectiveStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AwsDiscoveryDirectiveStatus.Marshal(b, m, deterministic)
}
func (m *AwsDiscoveryDirectiveStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AwsDiscoveryDirectiveStatus.Merge(m, src)
}
func (m *AwsDiscoveryDirectiveStatus) XXX_Size() int {
	return xxx_messageInfo_AwsDiscoveryDirectiveStatus.Size(m)
}
func (m *AwsDiscoveryDirectiveStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AwsDiscoveryDirectiveStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AwsDiscoveryDirectiveStatus proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AwsDiscoveryDirectiveSpec)(nil), "discovery.multicluster.solo.io.AwsDiscoveryDirectiveSpec")
	proto.RegisterType((*AwsDiscoveryDirectiveSpec_ResourceSelector)(nil), "discovery.multicluster.solo.io.AwsDiscoveryDirectiveSpec.ResourceSelector")
	proto.RegisterType((*AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher)(nil), "discovery.multicluster.solo.io.AwsDiscoveryDirectiveSpec.ResourceSelector.Matcher")
	proto.RegisterMapType((map[string]string)(nil), "discovery.multicluster.solo.io.AwsDiscoveryDirectiveSpec.ResourceSelector.Matcher.TagsEntry")
	proto.RegisterType((*AwsDiscoveryDirectiveStatus)(nil), "discovery.multicluster.solo.io.AwsDiscoveryDirectiveStatus")
}

func init() {
	proto.RegisterFile("github.com/solo-io/skv2/api/multicluster/discovery/v1alpha1/aws_discovery_directive.proto", fileDescriptor_5cf19e765c7d4f65)
}

var fileDescriptor_5cf19e765c7d4f65 = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xad, 0xe3, 0x40, 0xe4, 0x09, 0x15, 0xd5, 0xaa, 0x07, 0x63, 0x44, 0x89, 0x7a, 0xca, 0x85,
	0x5d, 0x35, 0x1c, 0x40, 0xdc, 0xa8, 0x8a, 0x28, 0x48, 0x1c, 0xd8, 0x72, 0x01, 0x21, 0x59, 0xdb,
	0xcd, 0xc8, 0x59, 0xd9, 0xf1, 0x5a, 0x3b, 0x6b, 0xb7, 0xf9, 0x14, 0xfe, 0xa0, 0x9f, 0xc0, 0xf7,
	0xf0, 0x03, 0x9c, 0xb8, 0xa3, 0xd8, 0x71, 0x84, 0x50, 0xdb, 0x53, 0x6e, 0xf3, 0x9e, 0xc7, 0xef,
	0xcd, 0xbe, 0x9d, 0x85, 0xaf, 0x99, 0xf1, 0x8b, 0xfa, 0x92, 0x6b, 0xbb, 0x14, 0x64, 0x0b, 0xfb,
	0xc2, 0x58, 0x41, 0x79, 0x33, 0x13, 0xaa, 0x32, 0x62, 0x59, 0x17, 0xde, 0xe8, 0xa2, 0x26, 0x8f,
	0x4e, 0xcc, 0x0d, 0x69, 0xdb, 0xa0, 0x5b, 0x89, 0xe6, 0x44, 0x15, 0xd5, 0x42, 0x9d, 0x08, 0x75,
	0x45, 0xe9, 0x96, 0x4e, 0xe7, 0xc6, 0xa1, 0xf6, 0xa6, 0x41, 0x5e, 0x39, 0xeb, 0x2d, 0x3b, 0xda,
	0x7e, 0xe2, 0xff, 0x0a, 0xf1, 0xb5, 0x0d, 0x37, 0x36, 0x39, 0xcc, 0x6c, 0x66, 0xdb, 0x56, 0xb1,
	0xae, 0xba, 0xbf, 0x12, 0x86, 0xd7, 0xbe, 0x23, 0xf1, 0xda, 0x77, 0xdc, 0xf1, 0xcd, 0x10, 0x9e,
	0xbc, 0xbd, 0xa2, 0xb3, 0x5e, 0xef, 0xac, 0x77, 0xba, 0xa8, 0x50, 0x33, 0x0b, 0xfb, 0x98, 0x53,
	0x4a, 0x58, 0xa0, 0xf6, 0xd6, 0x51, 0x3c, 0x98, 0x84, 0xd3, 0xf1, 0xec, 0x23, 0xbf, 0xdf, 0x9f,
	0xdf, 0xa9, 0xc8, 0x25, 0x92, 0xad, 0x9d, 0xc6, 0x8b, 0x8d, 0xa4, 0x7c, 0x84, 0x39, 0xf5, 0x80,
	0x92, 0x1f, 0x21, 0x1c, 0xfc, 0xdf, 0xc2, 0x18, 0x84, 0xca, 0x95, 0x71, 0x30, 0x09, 0xa6, 0xd1,
	0xf9, 0x9e, 0x5c, 0x03, 0x56, 0xc2, 0x68, 0xa9, 0xbc, 0x5e, 0xa0, 0x8b, 0x07, 0x93, 0x60, 0x3a,
	0x9e, 0xc9, 0xdd, 0xcd, 0xc4, 0x3f, 0x75, 0xca, 0xe7, 0x7b, 0xb2, 0x37, 0x49, 0x7e, 0x07, 0x30,
	0xda, 0xd0, 0xec, 0x39, 0x8c, 0x95, 0xd6, 0xb6, 0x2e, 0x7d, 0x6a, 0xe6, 0x14, 0x07, 0x93, 0x70,
	0x1a, 0x49, 0xd8, 0x50, 0x1f, 0xe6, 0xc4, 0x62, 0x18, 0x39, 0xcc, 0x8c, 0x2d, 0xbb, 0xc0, 0x22,
	0xd9, 0x43, 0x56, 0xc1, 0xd0, 0xab, 0x8c, 0xe2, 0xb0, 0xcd, 0xf1, 0xfb, 0xee, 0x67, 0xe6, 0x5f,
	0x54, 0x46, 0xef, 0x4a, 0xef, 0x56, 0xb2, 0x75, 0x4a, 0x5e, 0x41, 0xb4, 0xa5, 0xd8, 0x01, 0x84,
	0x39, 0xae, 0xba, 0x24, 0xe5, 0xba, 0x64, 0x87, 0xf0, 0xa0, 0x51, 0x45, 0x8d, 0x6d, 0x8a, 0x91,
	0xec, 0xc0, 0x9b, 0xc1, 0xeb, 0xe0, 0xf4, 0x31, 0xec, 0xf7, 0xf7, 0x9e, 0xfa, 0x55, 0x85, 0xc7,
	0xcf, 0xe0, 0xe9, 0xed, 0xf3, 0x78, 0xe5, 0x6b, 0x3a, 0xfd, 0xfc, 0xf3, 0xcf, 0x30, 0xb8, 0xf9,
	0x75, 0x14, 0x7c, 0x7b, 0x7f, 0xd7, 0xe2, 0x57, 0x79, 0xd6, 0x2e, 0xff, 0xfd, 0xa7, 0xde, 0x3e,
	0x82, 0xcb, 0x87, 0xed, 0x8e, 0xbe, 0xfc, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xdb, 0xce, 0x39, 0xeb,
	0x4a, 0x03, 0x00, 0x00,
}

func (this *AwsDiscoveryDirectiveSpec) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AwsDiscoveryDirectiveSpec)
	if !ok {
		that2, ok := that.(AwsDiscoveryDirectiveSpec)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.EksSelectors) != len(that1.EksSelectors) {
		return false
	}
	for i := range this.EksSelectors {
		if !this.EksSelectors[i].Equal(that1.EksSelectors[i]) {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *AwsDiscoveryDirectiveSpec_ResourceSelector) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AwsDiscoveryDirectiveSpec_ResourceSelector)
	if !ok {
		that2, ok := that.(AwsDiscoveryDirectiveSpec_ResourceSelector)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.SelectorType == nil {
		if this.SelectorType != nil {
			return false
		}
	} else if this.SelectorType == nil {
		return false
	} else if !this.SelectorType.Equal(that1.SelectorType) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *AwsDiscoveryDirectiveSpec_ResourceSelector_Arn) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AwsDiscoveryDirectiveSpec_ResourceSelector_Arn)
	if !ok {
		that2, ok := that.(AwsDiscoveryDirectiveSpec_ResourceSelector_Arn)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Arn != that1.Arn {
		return false
	}
	return true
}
func (this *AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher_)
	if !ok {
		that2, ok := that.(AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Matcher.Equal(that1.Matcher) {
		return false
	}
	return true
}
func (this *AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher)
	if !ok {
		that2, ok := that.(AwsDiscoveryDirectiveSpec_ResourceSelector_Matcher)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.AccountIds) != len(that1.AccountIds) {
		return false
	}
	for i := range this.AccountIds {
		if this.AccountIds[i] != that1.AccountIds[i] {
			return false
		}
	}
	if len(this.Regions) != len(that1.Regions) {
		return false
	}
	for i := range this.Regions {
		if this.Regions[i] != that1.Regions[i] {
			return false
		}
	}
	if len(this.Tags) != len(that1.Tags) {
		return false
	}
	for i := range this.Tags {
		if this.Tags[i] != that1.Tags[i] {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *AwsDiscoveryDirectiveStatus) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AwsDiscoveryDirectiveStatus)
	if !ok {
		that2, ok := that.(AwsDiscoveryDirectiveStatus)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
